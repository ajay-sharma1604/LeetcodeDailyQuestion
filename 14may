1219. Path with Maximum Gold
https://leetcode.com/problems/path-with-maximum-gold/?envType=daily-question&envId=2024-05-14

//t.c-O(n*m)
//s.c-O(1)
class Solution {
    
    int[] dx= {-1,0,0,1};
    int[] dy= {0,-1,1,0};

    public int dfs(int i, int j, int[][]grid){
        int n= grid.length;
        int m=grid[0].length;

        if(i<0 || i>=n || j<0 || j>=m || grid[i][j]==0){
            return 0;
        }

        int maxSum= 0;
        int currVal =grid[i][j];

        for(int d =0 ;d<4;d++){
            int ni =i+ dx[d];
            int nj= j+ dy[d];
            grid[i][j]=0;
            maxSum= Math.max(maxSum, currVal+dfs(ni,nj,grid));
            grid[i][j]= currVal;
        }
        return maxSum;
    }

    public int getMaximumGold(int[][] grid) {
        int n= grid.length;
        int m=grid[0].length;
        int ans =0;
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                ans=Math.max(ans, dfs(i,j,grid));
            }
        }
        return ans;
    }
}
